% docker run strace-demo
execve("./hello", ["./hello"], 0xffffc23f2160 /* 3 vars */) = 0
brk(NULL)                               = 0xaaaae812d000
mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xffff9da00000
faccessat(AT_FDCWD, "/etc/ld.so.preload", R_OK) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/etc/ld.so.cache", O_RDONLY|O_CLOEXEC) = 3
fstat(3, {st_mode=S_IFREG|0644, st_size=8467, ...}) = 0
mmap(NULL, 8467, PROT_READ, MAP_PRIVATE, 3, 0) = 0xffff9d9fd000
close(3)                                = 0
openat(AT_FDCWD, "/lib/aarch64-linux-gnu/libc.so.6", O_RDONLY|O_CLOEXEC) = 3
read(3, "\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0\267\0\1\0\0\0\360\206\2\0\0\0\0\0"..., 832) = 832
fstat(3, {st_mode=S_IFREG|0755, st_size=1722920, ...}) = 0
mmap(NULL, 1892240, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_DENYWRITE, -1, 0) = 0xffff9d7f9000
mmap(0xffff9d800000, 1826704, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0) = 0xffff9d800000
munmap(0xffff9d7f9000, 28672)           = 0
munmap(0xffff9d9be000, 36752)           = 0
mprotect(0xffff9d99a000, 77824, PROT_NONE) = 0
mmap(0xffff9d9ad000, 20480, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x19d000) = 0xffff9d9ad000
mmap(0xffff9d9b2000, 49040, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xffff9d9b2000
close(3)                                = 0
set_tid_address(0xffff9da00f90)         = 9
set_robust_list(0xffff9da00fa0, 24)     = 0
rseq(0xffff9da015e0, 0x20, 0, 0xd428bc00) = 0
mprotect(0xffff9d9ad000, 12288, PROT_READ) = 0
mprotect(0xaaaacbdef000, 4096, PROT_READ) = 0
mprotect(0xffff9da05000, 8192, PROT_READ) = 0
prlimit64(0, RLIMIT_STACK, NULL, {rlim_cur=8192*1024, rlim_max=RLIM64_INFINITY}) = 0
munmap(0xffff9d9fd000, 8467)            = 0
fstat(1, {st_mode=S_IFIFO|0600, st_size=0, ...}) = 0
getrandom("\x25\x53\xcf\x33\x5c\x57\xa1\xeb", 8, GRND_NONBLOCK) = 8
brk(NULL)                               = 0xaaaae812d000
brk(0xaaaae814e000)                     = 0xaaaae814e000
write(1, "Hello, World!\n", 14)         = 14 // syscall write
Hello, World!
exit_group(0)                           = ? // // syscall exit_group
+++ exited with 0 +++